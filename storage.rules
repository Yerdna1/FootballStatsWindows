rules_version = '2';

// Cloud Storage security rules
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             firestore.exists(/databases/(default)/documents/user_permissions/$(request.auth.uid)) &&
             firestore.get(/databases/(default)/documents/user_permissions/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidImageFile() {
      return resource.contentType.matches('image/.*');
    }
    
    function isValidFileSize() {
      return resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // User profile images
    match /user_images/{userId}/{fileName} {
      allow read: if true; // Public read access for profile images
      allow write: if isOwner(userId) && 
                      isValidImageFile() && 
                      isValidFileSize();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Team logos and images (managed by admins/moderators)
    match /team_images/{teamId}/{fileName} {
      allow read: if true; // Public read access
      allow write: if isAdmin() && 
                      isValidImageFile() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // League logos and images (managed by admins/moderators)
    match /league_images/{leagueId}/{fileName} {
      allow read: if true; // Public read access
      allow write: if isAdmin() && 
                      isValidImageFile() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // Temporary uploads (for processing)
    match /temp_uploads/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && 
                            isValidImageFile() && 
                            isValidFileSize();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // System files (backups, exports) - admin only
    match /system/{fileName} {
      allow read, write: if isAdmin();
    }
  }
}